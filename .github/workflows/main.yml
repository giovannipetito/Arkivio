# Optional - The name of the workflow as it will appear in the "Actions" tab of the GitHub repository.
name: github-actions
# Optional - The name for workflow runs generated from the workflow, which will appear in the list of
# workflow runs on your repository's "Actions" tab. This example uses an expression with the github
# context to display the username of the actor that triggered the workflow run.
run-name: ${{ github.actor }} is learning GitHub Actions

# Specifies the trigger for this workflow.
on:
  # This example uses the push and pull request events, so a workflow run is triggered every time
  # someone pushes a change to the repository or merges a pull request. This is triggered by a push
  # only to the master branch.
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # This allows you to run this workflow manually in the "Actions" tab of the GitHub repository.
  workflow_dispatch:

# Groups together all the jobs that run in the github-actions workflow.
jobs:

  # The workflow github-actions contains a list of jobs, the first is called "lint". The child keys
  # will define properties of the job.
  lint:
    # Configures the job to run on the latest version of an Ubuntu Linux runner. This means that the
    # job will execute on a fresh virtual machine hosted by GitHub.
    runs-on: ubuntu-latest
    # Groups together all the steps that run in the job. Each item nested under this section is a
    # separate action or shell script.
    steps:

      # Runs a single command using the runners shell.
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell.
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

      #- name: Run Lint
      #  run: ./gradlew lintDebug

      #- name: Upload html test report
      #  uses: actions/upload-artifact@v3
      #  with:
      #    name: index.html
      #    path: app/build/reports/lint-results-debug.html

  # The second job of the workflow jobs.
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "This job's status is ${{ job.status }}."

  # This job checks out the pushed code, installs the bats testing framework, and runs a basic
  # command to output the bats version: bats -v.
  Check-bats-version:
    runs-on: ubuntu-latest
    steps:
      # The uses keyword specifies that this step will run v3 of the actions/checkout action.
      # This is an action that checks out your repository onto the runner, allowing you to run
      # scripts or other actions against your code (such as build and test tools).
      # You should use the checkout action any time your workflow will run against the repository's code.
      - uses: actions/checkout@v3
      # This step uses the actions/setup-node@v3 action to install the specified version of the Node.js
      # (this example uses v14). This puts both the node and npm commands in your PATH.
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
      # The run keyword tells the job to execute a command on the runner. In this case, you are using
      # npm to install the bats software testing package.
      - run: npm install -g bats
      # Finally, you'll run the bats command with a parameter that outputs the software version.
      - run: bats -v

  build:
    runs-on: ubuntu-latest
    steps:
      # This step checks out a copy of your repository.
      - uses: actions/checkout@v3
      # This step references the directory that contains the action.
      - uses: ./.github/actions/hello-world-action